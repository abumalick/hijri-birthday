/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MonthsRouteImport } from './routes/months'
import { Route as GuidanceRouteImport } from './routes/guidance'
import { Route as AddRouteImport } from './routes/add'
import { Route as IndexRouteRouteImport } from './routes/index/route'
import { Route as RecordedIndexRouteImport } from './routes/recorded/index'
import { Route as RecordedIdEditRouteImport } from './routes/recorded/$id.edit'

const MonthsRoute = MonthsRouteImport.update({
  id: '/months',
  path: '/months',
  getParentRoute: () => rootRouteImport,
} as any)
const GuidanceRoute = GuidanceRouteImport.update({
  id: '/guidance',
  path: '/guidance',
  getParentRoute: () => rootRouteImport,
} as any)
const AddRoute = AddRouteImport.update({
  id: '/add',
  path: '/add',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRouteRoute = IndexRouteRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RecordedIndexRoute = RecordedIndexRouteImport.update({
  id: '/recorded/',
  path: '/recorded/',
  getParentRoute: () => rootRouteImport,
} as any)
const RecordedIdEditRoute = RecordedIdEditRouteImport.update({
  id: '/recorded/$id/edit',
  path: '/recorded/$id/edit',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRouteRoute
  '/add': typeof AddRoute
  '/guidance': typeof GuidanceRoute
  '/months': typeof MonthsRoute
  '/recorded': typeof RecordedIndexRoute
  '/recorded/$id/edit': typeof RecordedIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRouteRoute
  '/add': typeof AddRoute
  '/guidance': typeof GuidanceRoute
  '/months': typeof MonthsRoute
  '/recorded': typeof RecordedIndexRoute
  '/recorded/$id/edit': typeof RecordedIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRouteRoute
  '/add': typeof AddRoute
  '/guidance': typeof GuidanceRoute
  '/months': typeof MonthsRoute
  '/recorded/': typeof RecordedIndexRoute
  '/recorded/$id/edit': typeof RecordedIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/add'
    | '/guidance'
    | '/months'
    | '/recorded'
    | '/recorded/$id/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/add'
    | '/guidance'
    | '/months'
    | '/recorded'
    | '/recorded/$id/edit'
  id:
    | '__root__'
    | '/'
    | '/add'
    | '/guidance'
    | '/months'
    | '/recorded/'
    | '/recorded/$id/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRouteRoute: typeof IndexRouteRoute
  AddRoute: typeof AddRoute
  GuidanceRoute: typeof GuidanceRoute
  MonthsRoute: typeof MonthsRoute
  RecordedIndexRoute: typeof RecordedIndexRoute
  RecordedIdEditRoute: typeof RecordedIdEditRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/months': {
      id: '/months'
      path: '/months'
      fullPath: '/months'
      preLoaderRoute: typeof MonthsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/guidance': {
      id: '/guidance'
      path: '/guidance'
      fullPath: '/guidance'
      preLoaderRoute: typeof GuidanceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/add': {
      id: '/add'
      path: '/add'
      fullPath: '/add'
      preLoaderRoute: typeof AddRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recorded/': {
      id: '/recorded/'
      path: '/recorded'
      fullPath: '/recorded'
      preLoaderRoute: typeof RecordedIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recorded/$id/edit': {
      id: '/recorded/$id/edit'
      path: '/recorded/$id/edit'
      fullPath: '/recorded/$id/edit'
      preLoaderRoute: typeof RecordedIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRouteRoute: IndexRouteRoute,
  AddRoute: AddRoute,
  GuidanceRoute: GuidanceRoute,
  MonthsRoute: MonthsRoute,
  RecordedIndexRoute: RecordedIndexRoute,
  RecordedIdEditRoute: RecordedIdEditRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
